{
  "contractName": "Template",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "LogOraclizeQuery",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "number",
          "type": "uint256"
        }
      ],
      "name": "LogResultReceived",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "randomNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getRandomNumber",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "queryId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"LogOraclizeQuery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"LogResultReceived\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"queryId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getRandomNumber\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"randomNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"__callback(bytes32,string)\":{\"details\":\"The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/neha/Desktop/internship/oraclize/try1/contracts/Template.sol\":\"Template\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/neha/Desktop/internship/oraclize/try1/contracts/OraclizeAPI_0.5.sol\":{\"keccak256\":\"0x34d45a23ac8966650c4a1434b57105cbbd73ccb37ca0be228e10b427638f10cf\",\"urls\":[\"bzz-raw://926e7b2853b72234704669e90343efba0462fa9c5774eaa7092a480e077a33ea\",\"dweb:/ipfs/QmTuE4wFz2aSKKNYmNAozVRo4cnen1HghHmNTVshEafuM4\"]},\"/home/neha/Desktop/internship/oraclize/try1/contracts/Template.sol\":{\"keccak256\":\"0x01cc02ebd4eb11284baa53fcd694ec3d029290dfa4df4846f039371295adf74e\",\"urls\":[\"bzz-raw://12df9c7ad88d833854dd95d6c53da3141c5b28c52fdff2989965d5aed7d92480\",\"dweb:/ipfs/Qmd1MEAnGupTkuqtahhoN3DnQeB4oKLn7e8qTrmLkbaXuD\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c806327dc297e1461004457806338bbfa5014610116578063ccbac9f51461027f578063dbdff2c1146102aa575b600080fd5b34801561005057600080fd5b506101146004803603604081101561006757600080fd5b81019080803590602001909291908035906020019064010000000081111561008e57600080fd5b8201836020820111156100a057600080fd5b803590602001918460018302840111640100000000831117156100c257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506102b4565b005b34801561012257600080fd5b5061027d6004803603606081101561013957600080fd5b81019080803590602001909291908035906020019064010000000081111561016057600080fd5b82018360208201111561017257600080fd5b8035906020019184600183028401116401000000008311171561019457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156101f757600080fd5b82018360208201111561020957600080fd5b8035906020019184600183028401116401000000008311171561022b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506102f7565b005b34801561028b57600080fd5b506102946103d9565b6040518082815260200191505060405180910390f35b6102b26103df565b005b6102f3828260006040519080825280601f01601f1916602001820160405280156102ed5781602001600182028038833980820191505090505b506102f7565b5050565b6102ff6104ce565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033657600080fd5b6006600084815260200190815260200160002060009054906101000a900460ff1661036057600080fd5b610369826107eb565b6005819055507ff701f221c51454b30553d1c1b24a54a02b40ae30f869bf9b9c0583d295ab2a176005546040518082815260200191505060405180910390a160006006600085815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b60055481565b659f295cd5f0003410156103f257600080fd5b60006104526040518060400160405280600681526020017f6e65737465640000000000000000000000000000000000000000000000000000815250604051806101e001604052806101bb81526020016114996101bb91396202ab986107ff565b90507f0415a732c27dc65a8318b1f49677f1d76eb7365d60653ee494ed0897ef70abc86040518080602001828103825260358152602001806116546035913960400191505060405180910390a160016006600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061055657506000610554600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610d53565b145b15610567576105656000610d5e565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156105d157600080fd5b505af11580156105e5573d6000803e3d6000fd5b505050506040513d60208110156105fb57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461074457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156106c957600080fd5b505af11580156106dd573d6000803e3d6000fd5b505050506040513d60208110156106f357600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107ab57600080fd5b505afa1580156107bf573d6000803e3d6000fd5b505050506040513d60208110156107d557600080fd5b8101908080519060200190929190505050905090565b60006107f8826000610d6f565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061088757506000610885600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610d53565b145b15610898576108966000610d5e565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561090257600080fd5b505af1158015610916573d6000803e3d6000fd5b505050506040513d602081101561092c57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a7557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156109fa57600080fd5b505af1158015610a0e573d6000803e3d6000fd5b505050506040513d6020811015610a2457600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610b0b578082015181840152602081019050610af0565b50505050905090810190601f168015610b385780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015610b5857600080fd5b505af1158015610b6c573d6000803e3d6000fd5b505050506040513d6020811015610b8257600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115610bb5576000801b915050610d4c565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c51be90f8260008888886040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015610c57578082015181840152602081019050610c3c565b50505050905090810190601f168015610c845780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015610cbd578082015181840152602081019050610ca2565b50505050905090810190601f168015610cea5780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b158015610d0c57600080fd5b505af1158015610d20573d6000803e3d6000fd5b50505050506040513d6020811015610d3757600080fd5b81019080805190602001909291905050509150505b9392505050565b6000813b9050919050565b6000610d68610e82565b9050919050565b600060608390506000809050600080905060008090505b8351811015610e63576030848281518110610d9d57fe5b602001015160f81c60f81b60f81c60ff1610158015610dd957506039848281518110610dc557fe5b602001015160f81c60f81b60f81c60ff1611155b15610e2b578115610dfc576000861415610df257610e63565b8580600190039650505b600a830292506030848281518110610e1057fe5b602001015160f81c60f81b60f81c60ff160383019250610e56565b602e848281518110610e3957fe5b602001015160f81c60f81b60f81c60ff161415610e5557600191505b5b8080600101915050610d86565b506000851115610e765784600a0a820291505b81935050505092915050565b600080610ea2731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610d53565b1115610f4457731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610f3b6040518060400160405280600b81526020017f6574685f6d61696e6e65740000000000000000000000000000000000000000008152506113d9565b600190506113d6565b6000610f6373c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610d53565b11156110055773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610ffc6040518060400160405280600c81526020017f6574685f726f707374656e3300000000000000000000000000000000000000008152506113d9565b600190506113d6565b600061102473b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610d53565b11156110c65773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506110bd6040518060400160405280600981526020017f6574685f6b6f76616e00000000000000000000000000000000000000000000008152506113d9565b600190506113d6565b60006110e573146500cfd35b22e4a392fe0adc06de1a1368ed48610d53565b11156111875773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061117e6040518060400160405280600b81526020017f6574685f72696e6b6562790000000000000000000000000000000000000000008152506113d9565b600190506113d6565b60006111a673a2998efd205fb9d4b4963afb70778d6354ad3a41610d53565b11156112485773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061123f6040518060400160405280600a81526020017f6574685f676f65726c69000000000000000000000000000000000000000000008152506113d9565b600190506113d6565b6000611267736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610d53565b11156112cb57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506113d6565b60006112ea7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610d53565b111561134e577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506113d6565b600061136d7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610d53565b11156113d1577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506113d6565b600090505b90565b80600290805190602001906113ef9291906113f3565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061143457805160ff1916838001178555611462565b82800160010185558215611462579182015b82811115611461578251825591602001919060010190611446565b5b50905061146f9190611473565b5090565b61149591905b80821115611491576000816000905550600101611479565b5090565b9056fe5b55524c5d205b276a736f6e2868747470733a2f2f6170692e72616e646f6d2e6f72672f6a736f6e2d7270632f312f696e766f6b65292e726573756c742e72616e646f6d5b2264617461225d272c20275c6e7b226a736f6e727063223a2022322e30222c20226d6574686f64223a202267656e65726174655369676e6564496e746567657273222c2022706172616d73223a207b20226170694b6579223a2022247b5b646563727970745d20424f7847596e31594966684a5a485446514b534b5a2f47354b32656555774f6e6c435a654f4f6c4e646d335a4b6f67755930444c654a78614f71486c363647676d547164374e4559593267366f6d4f684367754651555a6c7a334379516b38576d455a35464b57667a6e46544643484b6b52314350466f657a45726a3834756b794f6e777436614e4161534a684235674d5763654252766a5644482f7d222c20226e223a20312c20226d696e223a20312c20226d6178223a20313030302c20227265706c6163656d656e74223a20747275652c202262617365223a203130247b5b6964656e746974795d20227d227d2c20226964223a203134323135247b5b6964656e746974795d20227d227d275d4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2ea265627a7a72315820fd02089d302eb8ea472ca0ee9ff7634c804c068a22e58d9ded34530a3011d73364736f6c634300050c0032",
  "sourceMap": "236:2684:2:-;;;686:328;8:9:-1;5:2;;;30:1;27;20:12;5:2;686:328:2;780:42;752:3;;:71;;;;;;;;;;;;;;;;;;833:58;11288:4:1;873:17:2;;11378:4:1;851:19:2;;:39;833:17;;;:58;;:::i;:::-;955:42;982:14;955:26;;;:42;;:::i;:::-;236:2684;;37032:116:1;11823:1;11799:26;;11807:3;;;;;;;;;;;11799:26;;;11798:64;;;;11860:1;11831:25;11851:3;;;;;;;;;;;11831:11;;;:25;;:::i;:::-;:30;11798:64;11794:130;;;11878:35;11455:1;11878:19;;;:35;;:::i;:::-;;11794:130;11958:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11958:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11958:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11958:16:1;;;;;;;;;;;;;;;;11937:37;;11945:8;;;;;;;;;;;11937:37;;;11933:106;;12011:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12011:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12011:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12011:16:1;;;;;;;;;;;;;;;;11990:8;;:38;;;;;;;;;;;;;;;;;;11933:106;37111:8;;;;;;;;;;;:21;;;37133:7;37111:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37111:30:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37111:30:1;;;;37032:116;:::o;37444:134::-;11823:1;11799:26;;11807:3;;;;;;;;;;;11799:26;;;11798:64;;;;11860:1;11831:25;11851:3;;;;;;;;;;;11831:11;;;:25;;:::i;:::-;:30;11798:64;11794:130;;;11878:35;11455:1;11878:19;;;:35;;:::i;:::-;;11794:130;11958:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11958:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11958:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11958:16:1;;;;;;;;;;;;;;;;11937:37;;11945:8;;;;;;;;;;;11937:37;;;11933:106;;12011:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12011:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12011:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12011:16:1;;;;;;;;;;;;;;;;11990:8;;:38;;;;;;;;;;;;;;;;;;11933:106;37534:8;;;;;;;;;;;:26;;;37561:9;37534:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37534:37:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37534:37:1;;;;37444:134;:::o;37291:147::-;37350:10;37416:5;37404:18;37395:27;;37381:51;;;:::o;12531:205::-;12596:16;12708:21;:19;;;:21;;:::i;:::-;12701:28;;12531:205;;;:::o;13010:2047::-;13059:16;13149:1;13091:55;13103:42;13091:11;;;:55;;:::i;:::-;:59;13087:248;;;13204:42;13176:3;;:71;;;;;;;;;;;;;;;;;;13261:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;13320:4;13313:11;;;;13087:248;13406:1;13348:55;13360:42;13348:11;;;:55;;:::i;:::-;:59;13344:257;;;13469:42;13441:3;;:71;;;;;;;;;;;;;;;;;;13526:39;;;;;;;;;;;;;;;;;;:23;;;:39;;:::i;:::-;13586:4;13579:11;;;;13344:257;13672:1;13614:55;13626:42;13614:11;;;:55;;:::i;:::-;:59;13610:252;;;13733:42;13705:3;;:71;;;;;;;;;;;;;;;;;;13790:36;;;;;;;;;;;;;;;;;;:23;;;:36;;:::i;:::-;13847:4;13840:11;;;;13610:252;13933:1;13875:55;13887:42;13875:11;;;:55;;:::i;:::-;:59;13871:256;;;13996:42;13968:3;;:71;;;;;;;;;;;;;;;;;;14053:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;14112:4;14105:11;;;;13871:256;14198:1;14140:55;14152:42;14140:11;;;:55;;:::i;:::-;:59;14136:254;;;14260:42;14232:3;;:71;;;;;;;;;;;;;;;;;;14317:37;;;;;;;;;;;;;;;;;;:23;;;:37;;:::i;:::-;14375:4;14368:11;;;;14136:254;14461:1;14403:55;14415:42;14403:11;;;:55;;:::i;:::-;:59;14399:204;;;14524:42;14496:3;;:71;;;;;;;;;;;;;;;;;;14588:4;14581:11;;;;14399:204;14674:1;14616:55;14628:42;14616:11;;;:55;;:::i;:::-;:59;14612:203;;;14736:42;14708:3;;:71;;;;;;;;;;;;;;;;;;14800:4;14793:11;;;;14612:203;14886:1;14828:55;14840:42;14828:11;;;:55;;:::i;:::-;:59;14824:205;;;14950:42;14922:3;;:71;;;;;;;;;;;;;;;;;;15014:4;15007:11;;;;14824:205;15045:5;15038:12;;13010:2047;;:::o;12742:125::-;12847:13;12823:21;:37;;;;;;;;;;;;:::i;:::-;;12742:125;:::o;236:2684:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "236:2684:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15295:122:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15295:122:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15295:122:1;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15295:122:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15295:122:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15295:122:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15295:122:1;;;;;;;;;;;;;;;:::i;:::-;;2190:723:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2190:723:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2190:723:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2190:723:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2190:723:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2190:723:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2190:723:2;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2190:723:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2190:723:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2190:723:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2190:723:2;;;;;;;;;;;;;;;:::i;:::-;;306:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;306:24:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1074:1040;;;:::i;:::-;;15295:122:1;15370:40;15381:5;15388:7;15407:1;15397:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;15397:12:1;;;;15370:10;:40::i;:::-;15295:122;;:::o;2190:723:2:-;2361:20;:18;:20::i;:::-;2347:34;;:10;:34;;;2339:43;;;;;;2435:8;:17;2444:7;2435:17;;;;;;;;;;;;;;;;;;;;;2427:26;;;;;;2624:16;2633:6;2624:8;:16::i;:::-;2609:12;:31;;;;2711;2729:12;;2711:31;;;;;;;;;;;;;;;;;;2901:5;2881:8;:17;2890:7;2881:17;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;2190:723;;;:::o;306:24::-;;;;:::o;1074:1040::-;1198:14;1185:9;:27;;1177:36;;;;;;1291:15;1309:567;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;479:6;1309:14;:567::i;:::-;1291:585;;1958:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2103:4;2083:8;:17;2092:7;2083:17;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;1074:1040;:::o;37155:130:1:-;37215:24;11823:1;11799:26;;11807:3;;;;;;;;;;;11799:26;;;11798:64;;;;11860:1;11831:25;11851:3;;;;;;;;;;;11831:11;:25::i;:::-;:30;11798:64;11794:130;;;11878:35;11455:1;11878:19;:35::i;:::-;;11794:130;11958:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11958:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11958:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11958:16:1;;;;;;;;;;;;;;;;11937:37;;11945:8;;;;;;;;;;;11937:37;;;11933:106;;12011:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12011:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12011:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12011:16:1;;;;;;;;;;;;;;;;11990:8;;:38;;;;;;;;;;;;;;;;;;11933:106;37258:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37258:20:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37258:20:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;37258:20:1;;;;;;;;;;;;;;;;37251:27;;37155:130;:::o;42854:115::-;42913:15;42947;42956:2;42960:1;42947:8;:15::i;:::-;42940:22;;42854:115;;;:::o;17140:406::-;17257:11;11823:1;11799:26;;11807:3;;;;;;;;;;;11799:26;;;11798:64;;;;11860:1;11831:25;11851:3;;;;;;;;;;;11831:11;:25::i;:::-;:30;11798:64;11794:130;;;11878:35;11455:1;11878:19;:35::i;:::-;;11794:130;11958:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11958:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11958:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11958:16:1;;;;;;;;;;;;;;;;11937:37;;11945:8;;;;;;;;;;;11937:37;;;11933:106;;12011:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12011:16:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12011:16:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12011:16:1;;;;;;;;;;;;;;;;11990:8;;:38;;;;;;;;;;;;;;;;;;11933:106;17280:10;17293:8;;;;;;;;;;;:17;;;17311:11;17324:9;17293:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;17293:41:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17293:41:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17293:41:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17293:41:1;;;;;;;;;;;;;;;;17280:54;;17380:9;17366:11;:23;17356:7;:33;17348:5;:41;17344:106;;;17411:1;17404:8;;;;;;;17344:106;17466:8;;;;;;;;;;;:27;;;17500:5;17507:1;17510:11;17523:4;17529:9;17466:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;17466:73:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;17466:73:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17466:73:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17466:73:1;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17466:73:1;;;;;;;;;;;;;;;;17459:80;;;12048:1;17140:406;;;;;:::o;37291:147::-;37350:10;37416:5;37404:18;37395:27;;37381:51;;;:::o;12531:205::-;12596:16;12708:21;:19;:21::i;:::-;12701:28;;12531:205;;;:::o;42975:796::-;43043:15;43070:20;43099:2;43070:32;;43112:9;43124:1;43112:13;;43135;43151:5;43135:21;;43171:6;43180:1;43171:10;;43166:516;43187:7;:14;43183:1;:18;43166:516;;;43254:2;43238:7;43246:1;43238:10;;;;;;;;;;;;;;;;43232:17;;43227:23;;:29;;43226:66;;;;;43289:2;43273:7;43281:1;43273:10;;;;;;;;;;;;;;;;43267:17;;43262:23;;:29;;43226:66;43222:450;;;43316:8;43312:175;;;43357:1;43351:2;:7;43347:122;;;43385:5;;43347:122;43443:4;;;;;;;;43312:175;43512:2;43504:10;;;;43566:2;43551:7;43559:1;43551:10;;;;;;;;;;;;;;;;43545:17;;43540:23;;:28;43532:36;;;;43222:450;;;43620:2;43604:7;43612:1;43604:10;;;;;;;;;;;;;;;;43598:17;;43593:23;;:29;43589:83;;;43653:4;43642:15;;43589:83;43222:450;43203:3;;;;;;;43166:516;;;;43700:1;43695:2;:6;43691:53;;;43731:2;43725;:8;43717:16;;;;43691:53;43760:4;43753:11;;;;;42975:796;;;;:::o;13010:2047::-;13059:16;13149:1;13091:55;13103:42;13091:11;:55::i;:::-;:59;13087:248;;;13204:42;13176:3;;:71;;;;;;;;;;;;;;;;;;13261:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13320:4;13313:11;;;;13087:248;13406:1;13348:55;13360:42;13348:11;:55::i;:::-;:59;13344:257;;;13469:42;13441:3;;:71;;;;;;;;;;;;;;;;;;13526:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;13586:4;13579:11;;;;13344:257;13672:1;13614:55;13626:42;13614:11;:55::i;:::-;:59;13610:252;;;13733:42;13705:3;;:71;;;;;;;;;;;;;;;;;;13790:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;13847:4;13840:11;;;;13610:252;13933:1;13875:55;13887:42;13875:11;:55::i;:::-;:59;13871:256;;;13996:42;13968:3;;:71;;;;;;;;;;;;;;;;;;14053:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14112:4;14105:11;;;;13871:256;14198:1;14140:55;14152:42;14140:11;:55::i;:::-;:59;14136:254;;;14260:42;14232:3;;:71;;;;;;;;;;;;;;;;;;14317:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14375:4;14368:11;;;;14136:254;14461:1;14403:55;14415:42;14403:11;:55::i;:::-;:59;14399:204;;;14524:42;14496:3;;:71;;;;;;;;;;;;;;;;;;14588:4;14581:11;;;;14399:204;14674:1;14616:55;14628:42;14616:11;:55::i;:::-;:59;14612:203;;;14736:42;14708:3;;:71;;;;;;;;;;;;;;;;;;14800:4;14793:11;;;;14612:203;14886:1;14828:55;14840:42;14828:11;:55::i;:::-;:59;14824:205;;;14950:42;14922:3;;:71;;;;;;;;;;;;;;;;;;15014:4;15007:11;;;;14824:205;15045:5;15038:12;;13010:2047;;:::o;12742:125::-;12847:13;12823:21;:37;;;;;;;;;;;;:::i;:::-;;12742:125;:::o;236:2684:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n/*\n  Import the Oraclize contract\n  outside of Remix, direct imports from GitHub may not be supported\n  instead, use a local import or just paste the Oraclize code in directly\n*/\nimport \"./OraclizeAPI_0.5.sol\";\n\ncontract Template is usingOraclize {\n    \n    // Define variables\n    uint public randomNumber; // number obtained from random.org\n    mapping(bytes32 => bool) validIds; // used for validating Query IDs\n    uint constant gasLimitForOraclize = 175000; // gas limit for Oraclize callback\n    \n    // Events used to track contract actions\n    event LogOraclizeQuery(string description);\n    event LogResultReceived(uint number);\n\n    // Constructor\n    constructor() public {\n        // set Oraclize proof type\n        OAR = OraclizeAddrResolverI(0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475);\n        oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS);\n      \n        // set gas price for Oraclize callback\n        oraclize_setCustomGasPrice(1000000000 wei); // 1 Gwei\n    }\n           \n    // Query Oraclize to get random number\n    function getRandomNumber() public payable {\n        // require ETH to cover callback gas costs\n        require(msg.value >= 0.000175 ether); // 175,000 gas * 1 Gwei = 0.000175 ETH\n      \n        // send query\n        bytes32 queryId = oraclize_query( \n          \"nested\", \n          \"[URL] ['json(https://api.random.org/json-rpc/1/invoke).result.random[\\\"data\\\"]', '\\\\n{\\\"jsonrpc\\\": \\\"2.0\\\", \\\"method\\\": \\\"generateSignedIntegers\\\", \\\"params\\\": { \\\"apiKey\\\": \\\"${[decrypt] BOxGYn1YIfhJZHTFQKSKZ/G5K2eeUwOnlCZeOOlNdm3ZKoguY0DLeJxaOqHl66GgmTqd7NEYY2g6omOhCguFQUZlz3CyQk8WmEZ5FKWfznFTFCHKkR1CPFoezErj84ukyOnwt6aNAaSJhB5gMWceBRvjVDH/}\\\", \\\"n\\\": 1, \\\"min\\\": 1, \\\"max\\\": 1000, \\\"replacement\\\": true, \\\"base\\\": 10${[identity] \\\"}\\\"}, \\\"id\\\": 14215${[identity] \\\"}\\\"}']\",\n          gasLimitForOraclize\n        );        \n                       \n        // log that query was sent\n        emit LogOraclizeQuery(\"Oraclize query was sent, standing by for the answer..\");\n      \n        // add query ID to mapping\n        validIds[queryId] = true;\n    }\n    \n    // Callback function for Oraclize once it retreives the data \n    function __callback(bytes32 queryId, string memory result, bytes memory proof) public {\n        // only allow Oraclize to call this function\n        require(msg.sender == oraclize_cbAddress());\n      \n        // validate the ID \n        require(validIds[queryId]);\n        \n        // set random number, result is of the form: [268]\n        // if we also returned serialNumber, form would be \"[3008768, [268]]\"\n        randomNumber = parseInt(result); \n      \n        // log the new number that was obtained\n        emit LogResultReceived(randomNumber); \n      \n        // reset mapping of this ID to false\n        // this ensures the callback for a given queryID never called twice\n        validIds[queryId] = false;\n    }\n    \n}",
  "sourcePath": "/home/neha/Desktop/internship/oraclize/try1/contracts/Template.sol",
  "ast": {
    "absolutePath": "/home/neha/Desktop/internship/oraclize/try1/contracts/Template.sol",
    "exportedSymbols": {
      "Template": [
        6464
      ]
    },
    "id": 6465,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6354,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/home/neha/Desktop/internship/oraclize/try1/contracts/OraclizeAPI_0.5.sol",
        "file": "./OraclizeAPI_0.5.sol",
        "id": 6355,
        "nodeType": "ImportDirective",
        "scope": 6465,
        "sourceUnit": 6353,
        "src": "203:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6356,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6352,
              "src": "257:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6352",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 6357,
            "nodeType": "InheritanceSpecifier",
            "src": "257:13:2"
          }
        ],
        "contractDependencies": [
          6352
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 6464,
        "linearizedBaseContracts": [
          6464,
          6352
        ],
        "name": "Template",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6359,
            "name": "randomNumber",
            "nodeType": "VariableDeclaration",
            "scope": 6464,
            "src": "306:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6358,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "306:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6363,
            "name": "validIds",
            "nodeType": "VariableDeclaration",
            "scope": 6464,
            "src": "371:33:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 6362,
              "keyType": {
                "id": 6360,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "379:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "371:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 6361,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "390:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6366,
            "name": "gasLimitForOraclize",
            "nodeType": "VariableDeclaration",
            "scope": 6464,
            "src": "443:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6364,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "443:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313735303030",
              "id": 6365,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "479:6:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_175000_by_1",
                "typeString": "int_const 175000"
              },
              "value": "175000"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 6370,
            "name": "LogOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6368,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 6370,
                  "src": "599:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6367,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "598:20:2"
            },
            "src": "576:43:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 6374,
            "name": "LogResultReceived",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6372,
                  "indexed": false,
                  "name": "number",
                  "nodeType": "VariableDeclaration",
                  "scope": 6374,
                  "src": "648:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6371,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "647:13:2"
            },
            "src": "624:37:2"
          },
          {
            "body": {
              "id": 6393,
              "nodeType": "Block",
              "src": "707:307:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6377,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 718,
                      "src": "752:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$180",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307836663438354338424636666334336541323132453933424246386365303436433766316362343735",
                          "id": 6379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "780:42:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 6378,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "758:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$180_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 6380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "758:65:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$180",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "752:71:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$180",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 6382,
                  "nodeType": "ExpressionStatement",
                  "src": "752:71:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 6386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 6384,
                          "name": "proofType_TLSNotary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 761,
                          "src": "851:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 6385,
                          "name": "proofStorage_IPFS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 755,
                          "src": "873:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "src": "851:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 6383,
                      "name": "oraclize_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4163,
                      "src": "833:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 6387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "833:58:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6388,
                  "nodeType": "ExpressionStatement",
                  "src": "833:58:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31303030303030303030",
                        "id": 6390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "982:14:2",
                        "subdenomination": "wei",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "id": 6389,
                      "name": "oraclize_setCustomGasPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4197,
                      "src": "955:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 6391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "955:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6392,
                  "nodeType": "ExpressionStatement",
                  "src": "955:42:2"
                }
              ]
            },
            "documentation": null,
            "id": 6394,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "697:2:2"
            },
            "returnParameters": {
              "id": 6376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "707:0:2"
            },
            "scope": 6464,
            "src": "686:328:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6422,
              "nodeType": "Block",
              "src": "1116:998:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 6398,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6479,
                            "src": "1185:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1185:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "302e303030313735",
                          "id": 6400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1198:14:2",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_175000000000000_by_1",
                            "typeString": "int_const 175000000000000"
                          },
                          "value": "0.000175"
                        },
                        "src": "1185:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6397,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6482,
                        6483
                      ],
                      "referencedDeclaration": 6482,
                      "src": "1177:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1177:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6403,
                  "nodeType": "ExpressionStatement",
                  "src": "1177:36:2"
                },
                {
                  "assignments": [
                    6405
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6405,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 6422,
                      "src": "1291:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 6404,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1291:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6411,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6573746564",
                        "id": 6407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1336:8:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d5b14044d78fbf0c9dd8b9c49e35f09ee5a6f5b1b3b8117b5d0e15c8dd2cb09",
                          "typeString": "literal_string \"nested\""
                        },
                        "value": "nested"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5b55524c5d205b276a736f6e2868747470733a2f2f6170692e72616e646f6d2e6f72672f6a736f6e2d7270632f312f696e766f6b65292e726573756c742e72616e646f6d5b2264617461225d272c20275c6e7b226a736f6e727063223a2022322e30222c20226d6574686f64223a202267656e65726174655369676e6564496e746567657273222c2022706172616d73223a207b20226170694b6579223a2022247b5b646563727970745d20424f7847596e31594966684a5a485446514b534b5a2f47354b32656555774f6e6c435a654f4f6c4e646d335a4b6f67755930444c654a78614f71486c363647676d547164374e4559593267366f6d4f684367754651555a6c7a334379516b38576d455a35464b57667a6e46544643484b6b52314350466f657a45726a3834756b794f6e777436614e4161534a684235674d5763654252766a5644482f7d222c20226e223a20312c20226d696e223a20312c20226d6178223a20313030302c20227265706c6163656d656e74223a20747275652c202262617365223a203130247b5b6964656e746974795d20227d227d2c20226964223a203134323135247b5b6964656e746974795d20227d227d275d",
                        "id": 6408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1357:478:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22e8bb9cbc26288ed8d5e2f47725087210c038fe53c985417bf1ac03769f2aec",
                          "typeString": "literal_string \"[URL] ['json(https://api.random.org/json-rpc/1/invoke).result.random[\"data\"]', '\\n{\"jsonrpc\": \"2.0\", \"method\": \"generateSignedIntegers\", \"params\": { \"apiKey\": \"${[decrypt] BOxGYn1YIfhJZHTFQKSKZ/G5K2eeUwOnlCZeOOlNdm3ZKoguY0DLeJxaOqHl66GgmTqd7NEYY2g6omOhCguFQUZlz3CyQk8WmEZ5FKWfznFTFCHKkR1CPFoezErj84ukyOnwt6aNAaSJhB5gMWceBRvjVDH/}\", \"n\": 1, \"min\": 1, \"max\": 1000, \"replacement\": true, \"base\": 10${[identity] \"}\"}, \"id\": 14215${[identity] \"}\"}']\""
                        },
                        "value": "[URL] ['json(https://api.random.org/json-rpc/1/invoke).result.random[\"data\"]', '\\n{\"jsonrpc\": \"2.0\", \"method\": \"generateSignedIntegers\", \"params\": { \"apiKey\": \"${[decrypt] BOxGYn1YIfhJZHTFQKSKZ/G5K2eeUwOnlCZeOOlNdm3ZKoguY0DLeJxaOqHl66GgmTqd7NEYY2g6omOhCguFQUZlz3CyQk8WmEZ5FKWfznFTFCHKkR1CPFoezErj84ukyOnwt6aNAaSJhB5gMWceBRvjVDH/}\", \"n\": 1, \"min\": 1, \"max\": 1000, \"replacement\": true, \"base\": 10${[identity] \"}\"}, \"id\": 14215${[identity] \"}\"}']"
                      },
                      {
                        "argumentTypes": null,
                        "id": 6409,
                        "name": "gasLimitForOraclize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6366,
                        "src": "1847:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4d5b14044d78fbf0c9dd8b9c49e35f09ee5a6f5b1b3b8117b5d0e15c8dd2cb09",
                          "typeString": "literal_string \"nested\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22e8bb9cbc26288ed8d5e2f47725087210c038fe53c985417bf1ac03769f2aec",
                          "typeString": "literal_string \"[URL] ['json(https://api.random.org/json-rpc/1/invoke).result.random[\"data\"]', '\\n{\"jsonrpc\": \"2.0\", \"method\": \"generateSignedIntegers\", \"params\": { \"apiKey\": \"${[decrypt] BOxGYn1YIfhJZHTFQKSKZ/G5K2eeUwOnlCZeOOlNdm3ZKoguY0DLeJxaOqHl66GgmTqd7NEYY2g6omOhCguFQUZlz3CyQk8WmEZ5FKWfznFTFCHKkR1CPFoezErj84ukyOnwt6aNAaSJhB5gMWceBRvjVDH/}\", \"n\": 1, \"min\": 1, \"max\": 1000, \"replacement\": true, \"base\": 10${[identity] \"}\"}, \"id\": 14215${[identity] \"}\"}']\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6406,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1179,
                        1222,
                        1269,
                        1314,
                        1358,
                        1404,
                        1454,
                        1502,
                        1550,
                        1600,
                        1654,
                        1706,
                        1743,
                        1783,
                        1826,
                        1866,
                        1911,
                        1959,
                        2010,
                        2058,
                        2111,
                        2167,
                        2226,
                        2282,
                        2343,
                        2407,
                        2474,
                        2538,
                        2607,
                        2679,
                        2754,
                        2826,
                        2874,
                        2924,
                        2978,
                        3030,
                        3067,
                        3107,
                        3150,
                        3190,
                        3235,
                        3283,
                        3334,
                        3382,
                        3435,
                        3491,
                        3550,
                        3606,
                        3667,
                        3731,
                        3798,
                        3862,
                        3931,
                        4003,
                        4078,
                        4150
                      ],
                      "referencedDeclaration": 1314,
                      "src": "1309:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory,uint256) returns (bytes32)"
                      }
                    },
                    "id": 6410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1309:567:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1291:585:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                        "id": 6413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1975:55:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                        },
                        "value": "Oraclize query was sent, standing by for the answer.."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                        }
                      ],
                      "id": 6412,
                      "name": "LogOraclizeQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6370,
                      "src": "1958:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 6414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1958:73:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6415,
                  "nodeType": "EmitStatement",
                  "src": "1953:78:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 6416,
                        "name": "validIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6363,
                        "src": "2083:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 6418,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 6417,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6405,
                        "src": "2092:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2083:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 6419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2103:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2083:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6421,
                  "nodeType": "ExpressionStatement",
                  "src": "2083:24:2"
                }
              ]
            },
            "documentation": null,
            "id": 6423,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRandomNumber",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1098:2:2"
            },
            "returnParameters": {
              "id": 6396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1116:0:2"
            },
            "scope": 6464,
            "src": "1074:1040:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6462,
              "nodeType": "Block",
              "src": "2276:637:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 6433,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6479,
                            "src": "2347:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2347:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6435,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4175,
                            "src": "2361:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 6436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2361:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2347:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6432,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6482,
                        6483
                      ],
                      "referencedDeclaration": 6482,
                      "src": "2339:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2339:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6439,
                  "nodeType": "ExpressionStatement",
                  "src": "2339:43:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 6441,
                          "name": "validIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6363,
                          "src": "2435:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                            "typeString": "mapping(bytes32 => bool)"
                          }
                        },
                        "id": 6443,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 6442,
                          "name": "queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6425,
                          "src": "2444:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2435:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6440,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6482,
                        6483
                      ],
                      "referencedDeclaration": 6482,
                      "src": "2427:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2427:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6445,
                  "nodeType": "ExpressionStatement",
                  "src": "2427:26:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6446,
                      "name": "randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6359,
                      "src": "2609:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 6448,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6427,
                          "src": "2633:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 6447,
                        "name": "parseInt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          5008,
                          5125
                        ],
                        "referencedDeclaration": 5008,
                        "src": "2624:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) pure returns (uint256)"
                        }
                      },
                      "id": 6449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2624:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2609:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6451,
                  "nodeType": "ExpressionStatement",
                  "src": "2609:31:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6453,
                        "name": "randomNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6359,
                        "src": "2729:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6452,
                      "name": "LogResultReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6374,
                      "src": "2711:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 6454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2711:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6455,
                  "nodeType": "EmitStatement",
                  "src": "2706:36:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 6456,
                        "name": "validIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6363,
                        "src": "2881:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 6458,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 6457,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6425,
                        "src": "2890:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2881:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 6459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2901:5:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2881:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6461,
                  "nodeType": "ExpressionStatement",
                  "src": "2881:25:2"
                }
              ]
            },
            "documentation": null,
            "id": 6463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6425,
                  "name": "queryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 6463,
                  "src": "2210:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6424,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2210:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6427,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 6463,
                  "src": "2227:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6426,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2227:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6429,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 6463,
                  "src": "2249:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6428,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2249:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2209:59:2"
            },
            "returnParameters": {
              "id": 6431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2276:0:2"
            },
            "scope": 6464,
            "src": "2190:723:2",
            "stateMutability": "nonpayable",
            "superFunction": 1105,
            "visibility": "public"
          }
        ],
        "scope": 6465,
        "src": "236:2684:2"
      }
    ],
    "src": "0:2920:2"
  },
  "legacyAST": {
    "absolutePath": "/home/neha/Desktop/internship/oraclize/try1/contracts/Template.sol",
    "exportedSymbols": {
      "Template": [
        6464
      ]
    },
    "id": 6465,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6354,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/home/neha/Desktop/internship/oraclize/try1/contracts/OraclizeAPI_0.5.sol",
        "file": "./OraclizeAPI_0.5.sol",
        "id": 6355,
        "nodeType": "ImportDirective",
        "scope": 6465,
        "sourceUnit": 6353,
        "src": "203:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6356,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6352,
              "src": "257:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6352",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 6357,
            "nodeType": "InheritanceSpecifier",
            "src": "257:13:2"
          }
        ],
        "contractDependencies": [
          6352
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 6464,
        "linearizedBaseContracts": [
          6464,
          6352
        ],
        "name": "Template",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6359,
            "name": "randomNumber",
            "nodeType": "VariableDeclaration",
            "scope": 6464,
            "src": "306:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6358,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "306:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6363,
            "name": "validIds",
            "nodeType": "VariableDeclaration",
            "scope": 6464,
            "src": "371:33:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 6362,
              "keyType": {
                "id": 6360,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "379:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "371:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 6361,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "390:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6366,
            "name": "gasLimitForOraclize",
            "nodeType": "VariableDeclaration",
            "scope": 6464,
            "src": "443:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6364,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "443:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313735303030",
              "id": 6365,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "479:6:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_175000_by_1",
                "typeString": "int_const 175000"
              },
              "value": "175000"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 6370,
            "name": "LogOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6368,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 6370,
                  "src": "599:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6367,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "598:20:2"
            },
            "src": "576:43:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 6374,
            "name": "LogResultReceived",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6372,
                  "indexed": false,
                  "name": "number",
                  "nodeType": "VariableDeclaration",
                  "scope": 6374,
                  "src": "648:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6371,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "647:13:2"
            },
            "src": "624:37:2"
          },
          {
            "body": {
              "id": 6393,
              "nodeType": "Block",
              "src": "707:307:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6377,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 718,
                      "src": "752:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$180",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307836663438354338424636666334336541323132453933424246386365303436433766316362343735",
                          "id": 6379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "780:42:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 6378,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "758:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$180_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 6380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "758:65:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$180",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "752:71:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$180",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 6382,
                  "nodeType": "ExpressionStatement",
                  "src": "752:71:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 6386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 6384,
                          "name": "proofType_TLSNotary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 761,
                          "src": "851:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 6385,
                          "name": "proofStorage_IPFS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 755,
                          "src": "873:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "src": "851:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 6383,
                      "name": "oraclize_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4163,
                      "src": "833:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 6387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "833:58:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6388,
                  "nodeType": "ExpressionStatement",
                  "src": "833:58:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31303030303030303030",
                        "id": 6390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "982:14:2",
                        "subdenomination": "wei",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "id": 6389,
                      "name": "oraclize_setCustomGasPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4197,
                      "src": "955:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 6391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "955:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6392,
                  "nodeType": "ExpressionStatement",
                  "src": "955:42:2"
                }
              ]
            },
            "documentation": null,
            "id": 6394,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "697:2:2"
            },
            "returnParameters": {
              "id": 6376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "707:0:2"
            },
            "scope": 6464,
            "src": "686:328:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6422,
              "nodeType": "Block",
              "src": "1116:998:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 6398,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6479,
                            "src": "1185:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1185:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "302e303030313735",
                          "id": 6400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1198:14:2",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_175000000000000_by_1",
                            "typeString": "int_const 175000000000000"
                          },
                          "value": "0.000175"
                        },
                        "src": "1185:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6397,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6482,
                        6483
                      ],
                      "referencedDeclaration": 6482,
                      "src": "1177:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1177:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6403,
                  "nodeType": "ExpressionStatement",
                  "src": "1177:36:2"
                },
                {
                  "assignments": [
                    6405
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6405,
                      "name": "queryId",
                      "nodeType": "VariableDeclaration",
                      "scope": 6422,
                      "src": "1291:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 6404,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1291:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6411,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6573746564",
                        "id": 6407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1336:8:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d5b14044d78fbf0c9dd8b9c49e35f09ee5a6f5b1b3b8117b5d0e15c8dd2cb09",
                          "typeString": "literal_string \"nested\""
                        },
                        "value": "nested"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5b55524c5d205b276a736f6e2868747470733a2f2f6170692e72616e646f6d2e6f72672f6a736f6e2d7270632f312f696e766f6b65292e726573756c742e72616e646f6d5b2264617461225d272c20275c6e7b226a736f6e727063223a2022322e30222c20226d6574686f64223a202267656e65726174655369676e6564496e746567657273222c2022706172616d73223a207b20226170694b6579223a2022247b5b646563727970745d20424f7847596e31594966684a5a485446514b534b5a2f47354b32656555774f6e6c435a654f4f6c4e646d335a4b6f67755930444c654a78614f71486c363647676d547164374e4559593267366f6d4f684367754651555a6c7a334379516b38576d455a35464b57667a6e46544643484b6b52314350466f657a45726a3834756b794f6e777436614e4161534a684235674d5763654252766a5644482f7d222c20226e223a20312c20226d696e223a20312c20226d6178223a20313030302c20227265706c6163656d656e74223a20747275652c202262617365223a203130247b5b6964656e746974795d20227d227d2c20226964223a203134323135247b5b6964656e746974795d20227d227d275d",
                        "id": 6408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1357:478:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22e8bb9cbc26288ed8d5e2f47725087210c038fe53c985417bf1ac03769f2aec",
                          "typeString": "literal_string \"[URL] ['json(https://api.random.org/json-rpc/1/invoke).result.random[\"data\"]', '\\n{\"jsonrpc\": \"2.0\", \"method\": \"generateSignedIntegers\", \"params\": { \"apiKey\": \"${[decrypt] BOxGYn1YIfhJZHTFQKSKZ/G5K2eeUwOnlCZeOOlNdm3ZKoguY0DLeJxaOqHl66GgmTqd7NEYY2g6omOhCguFQUZlz3CyQk8WmEZ5FKWfznFTFCHKkR1CPFoezErj84ukyOnwt6aNAaSJhB5gMWceBRvjVDH/}\", \"n\": 1, \"min\": 1, \"max\": 1000, \"replacement\": true, \"base\": 10${[identity] \"}\"}, \"id\": 14215${[identity] \"}\"}']\""
                        },
                        "value": "[URL] ['json(https://api.random.org/json-rpc/1/invoke).result.random[\"data\"]', '\\n{\"jsonrpc\": \"2.0\", \"method\": \"generateSignedIntegers\", \"params\": { \"apiKey\": \"${[decrypt] BOxGYn1YIfhJZHTFQKSKZ/G5K2eeUwOnlCZeOOlNdm3ZKoguY0DLeJxaOqHl66GgmTqd7NEYY2g6omOhCguFQUZlz3CyQk8WmEZ5FKWfznFTFCHKkR1CPFoezErj84ukyOnwt6aNAaSJhB5gMWceBRvjVDH/}\", \"n\": 1, \"min\": 1, \"max\": 1000, \"replacement\": true, \"base\": 10${[identity] \"}\"}, \"id\": 14215${[identity] \"}\"}']"
                      },
                      {
                        "argumentTypes": null,
                        "id": 6409,
                        "name": "gasLimitForOraclize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6366,
                        "src": "1847:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4d5b14044d78fbf0c9dd8b9c49e35f09ee5a6f5b1b3b8117b5d0e15c8dd2cb09",
                          "typeString": "literal_string \"nested\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22e8bb9cbc26288ed8d5e2f47725087210c038fe53c985417bf1ac03769f2aec",
                          "typeString": "literal_string \"[URL] ['json(https://api.random.org/json-rpc/1/invoke).result.random[\"data\"]', '\\n{\"jsonrpc\": \"2.0\", \"method\": \"generateSignedIntegers\", \"params\": { \"apiKey\": \"${[decrypt] BOxGYn1YIfhJZHTFQKSKZ/G5K2eeUwOnlCZeOOlNdm3ZKoguY0DLeJxaOqHl66GgmTqd7NEYY2g6omOhCguFQUZlz3CyQk8WmEZ5FKWfznFTFCHKkR1CPFoezErj84ukyOnwt6aNAaSJhB5gMWceBRvjVDH/}\", \"n\": 1, \"min\": 1, \"max\": 1000, \"replacement\": true, \"base\": 10${[identity] \"}\"}, \"id\": 14215${[identity] \"}\"}']\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6406,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1179,
                        1222,
                        1269,
                        1314,
                        1358,
                        1404,
                        1454,
                        1502,
                        1550,
                        1600,
                        1654,
                        1706,
                        1743,
                        1783,
                        1826,
                        1866,
                        1911,
                        1959,
                        2010,
                        2058,
                        2111,
                        2167,
                        2226,
                        2282,
                        2343,
                        2407,
                        2474,
                        2538,
                        2607,
                        2679,
                        2754,
                        2826,
                        2874,
                        2924,
                        2978,
                        3030,
                        3067,
                        3107,
                        3150,
                        3190,
                        3235,
                        3283,
                        3334,
                        3382,
                        3435,
                        3491,
                        3550,
                        3606,
                        3667,
                        3731,
                        3798,
                        3862,
                        3931,
                        4003,
                        4078,
                        4150
                      ],
                      "referencedDeclaration": 1314,
                      "src": "1309:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory,uint256) returns (bytes32)"
                      }
                    },
                    "id": 6410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1309:567:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1291:585:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e",
                        "id": 6413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1975:55:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                        },
                        "value": "Oraclize query was sent, standing by for the answer.."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_69a7d1deb2934afbc371aac8f273ab7d26e8bb55eb72e75b9f93e1ec03480327",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer..\""
                        }
                      ],
                      "id": 6412,
                      "name": "LogOraclizeQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6370,
                      "src": "1958:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 6414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1958:73:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6415,
                  "nodeType": "EmitStatement",
                  "src": "1953:78:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 6416,
                        "name": "validIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6363,
                        "src": "2083:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 6418,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 6417,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6405,
                        "src": "2092:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2083:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 6419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2103:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2083:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6421,
                  "nodeType": "ExpressionStatement",
                  "src": "2083:24:2"
                }
              ]
            },
            "documentation": null,
            "id": 6423,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRandomNumber",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1098:2:2"
            },
            "returnParameters": {
              "id": 6396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1116:0:2"
            },
            "scope": 6464,
            "src": "1074:1040:2",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6462,
              "nodeType": "Block",
              "src": "2276:637:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 6433,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6479,
                            "src": "2347:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2347:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6435,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4175,
                            "src": "2361:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 6436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2361:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2347:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6432,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6482,
                        6483
                      ],
                      "referencedDeclaration": 6482,
                      "src": "2339:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2339:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6439,
                  "nodeType": "ExpressionStatement",
                  "src": "2339:43:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 6441,
                          "name": "validIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6363,
                          "src": "2435:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                            "typeString": "mapping(bytes32 => bool)"
                          }
                        },
                        "id": 6443,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 6442,
                          "name": "queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6425,
                          "src": "2444:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2435:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6440,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6482,
                        6483
                      ],
                      "referencedDeclaration": 6482,
                      "src": "2427:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2427:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6445,
                  "nodeType": "ExpressionStatement",
                  "src": "2427:26:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 6446,
                      "name": "randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6359,
                      "src": "2609:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 6448,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6427,
                          "src": "2633:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 6447,
                        "name": "parseInt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          5008,
                          5125
                        ],
                        "referencedDeclaration": 5008,
                        "src": "2624:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) pure returns (uint256)"
                        }
                      },
                      "id": 6449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2624:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2609:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6451,
                  "nodeType": "ExpressionStatement",
                  "src": "2609:31:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6453,
                        "name": "randomNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6359,
                        "src": "2729:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6452,
                      "name": "LogResultReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6374,
                      "src": "2711:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 6454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2711:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6455,
                  "nodeType": "EmitStatement",
                  "src": "2706:36:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 6456,
                        "name": "validIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6363,
                        "src": "2881:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 6458,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 6457,
                        "name": "queryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6425,
                        "src": "2890:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2881:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 6459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2901:5:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2881:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6461,
                  "nodeType": "ExpressionStatement",
                  "src": "2881:25:2"
                }
              ]
            },
            "documentation": null,
            "id": 6463,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6425,
                  "name": "queryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 6463,
                  "src": "2210:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6424,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2210:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6427,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 6463,
                  "src": "2227:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6426,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2227:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6429,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 6463,
                  "src": "2249:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6428,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2249:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2209:59:2"
            },
            "returnParameters": {
              "id": 6431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2276:0:2"
            },
            "scope": 6464,
            "src": "2190:723:2",
            "stateMutability": "nonpayable",
            "superFunction": 1105,
            "visibility": "public"
          }
        ],
        "scope": 6465,
        "src": "236:2684:2"
      }
    ],
    "src": "0:2920:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {
    "1577951628383": {
      "events": {
        "0x0415a732c27dc65a8318b1f49677f1d76eb7365d60653ee494ed0897ef70abc8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "name": "LogOraclizeQuery",
          "type": "event",
          "signature": "0x0415a732c27dc65a8318b1f49677f1d76eb7365d60653ee494ed0897ef70abc8"
        },
        "0xf701f221c51454b30553d1c1b24a54a02b40ae30f869bf9b9c0583d295ab2a17": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "number",
              "type": "uint256"
            }
          ],
          "name": "LogResultReceived",
          "type": "event",
          "signature": "0xf701f221c51454b30553d1c1b24a54a02b40ae30f869bf9b9c0583d295ab2a17"
        }
      },
      "links": {},
      "address": "0x45c91d204ff4f43730131935e6fafD76dcD33435",
      "transactionHash": "0x93e6719534e8e693d4844ed6b8bf161d774a7a5c02b0e63c324ceaac168d48c1"
    },
    "1577957731474": {
      "events": {
        "0x0415a732c27dc65a8318b1f49677f1d76eb7365d60653ee494ed0897ef70abc8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "name": "LogOraclizeQuery",
          "type": "event",
          "signature": "0x0415a732c27dc65a8318b1f49677f1d76eb7365d60653ee494ed0897ef70abc8"
        },
        "0xf701f221c51454b30553d1c1b24a54a02b40ae30f869bf9b9c0583d295ab2a17": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "number",
              "type": "uint256"
            }
          ],
          "name": "LogResultReceived",
          "type": "event",
          "signature": "0xf701f221c51454b30553d1c1b24a54a02b40ae30f869bf9b9c0583d295ab2a17"
        }
      },
      "links": {},
      "address": "0x4278008bFD05BEd5C11F743aAc03e0c52BE1C567",
      "transactionHash": "0x09528e71c9286bc9415d21e2da1de8b5a4a22474ecab070e26608fa676f8e82b"
    },
    "1577961329226": {
      "events": {
        "0x0415a732c27dc65a8318b1f49677f1d76eb7365d60653ee494ed0897ef70abc8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "description",
              "type": "string"
            }
          ],
          "name": "LogOraclizeQuery",
          "type": "event",
          "signature": "0x0415a732c27dc65a8318b1f49677f1d76eb7365d60653ee494ed0897ef70abc8"
        },
        "0xf701f221c51454b30553d1c1b24a54a02b40ae30f869bf9b9c0583d295ab2a17": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "number",
              "type": "uint256"
            }
          ],
          "name": "LogResultReceived",
          "type": "event",
          "signature": "0xf701f221c51454b30553d1c1b24a54a02b40ae30f869bf9b9c0583d295ab2a17"
        }
      },
      "links": {},
      "address": "0xD9AEdf9E1472A96493A2f3A3473c05f39A474D1b",
      "transactionHash": "0x1d915ec9a50bee26821c1d41f1b83ba3c148a09b272280455a2b614c08ee8a4d"
    }
  },
  "schemaVersion": "3.0.20",
  "updatedAt": "2020-01-02T12:24:56.622Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "__callback(bytes32,string)": {
        "details": "The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}